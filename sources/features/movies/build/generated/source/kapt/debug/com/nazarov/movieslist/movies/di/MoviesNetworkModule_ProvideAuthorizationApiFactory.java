// Generated by Dagger (https://dagger.dev).
package com.nazarov.movieslist.movies.di;

import com.nazarov.movieslist.movies.data.api.MoviesApi;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import retrofit2.Retrofit;

@ScopeMetadata
@QualifierMetadata("com.nazarov.movieslist.core.qualifiers.RestApi")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MoviesNetworkModule_ProvideAuthorizationApiFactory implements Factory<MoviesApi> {
  private final MoviesNetworkModule module;

  private final Provider<Retrofit> retrofitProvider;

  public MoviesNetworkModule_ProvideAuthorizationApiFactory(MoviesNetworkModule module,
      Provider<Retrofit> retrofitProvider) {
    this.module = module;
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public MoviesApi get() {
    return provideAuthorizationApi(module, retrofitProvider.get());
  }

  public static MoviesNetworkModule_ProvideAuthorizationApiFactory create(
      MoviesNetworkModule module, Provider<Retrofit> retrofitProvider) {
    return new MoviesNetworkModule_ProvideAuthorizationApiFactory(module, retrofitProvider);
  }

  public static MoviesApi provideAuthorizationApi(MoviesNetworkModule instance, Retrofit retrofit) {
    return Preconditions.checkNotNullFromProvides(instance.provideAuthorizationApi(retrofit));
  }
}
