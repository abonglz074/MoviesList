// Generated by Dagger (https://dagger.dev).
package com.nazarov.movieslist.network;

import com.nazarov.movieslist.core.AndroidDependenciesProvider;
import dagger.internal.DaggerGenerated;
import dagger.internal.Preconditions;
import okhttp3.OkHttpClient;
import retrofit2.Retrofit;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DaggerNetworkComponent {
  private DaggerNetworkComponent() {
  }

  public static NetworkComponent.Factory factory() {
    return new Factory();
  }

  private static final class Factory implements NetworkComponent.Factory {
    @Override
    public NetworkComponent create(AndroidDependenciesProvider androidDependenciesProvider) {
      Preconditions.checkNotNull(androidDependenciesProvider);
      return new NetworkComponentImpl(new NetworkModule(), androidDependenciesProvider);
    }
  }

  private static final class NetworkComponentImpl implements NetworkComponent {
    private final NetworkModule networkModule;

    private final NetworkComponentImpl networkComponentImpl = this;

    private NetworkComponentImpl(NetworkModule networkModuleParam,
        AndroidDependenciesProvider androidDependenciesProviderParam) {
      this.networkModule = networkModuleParam;

    }

    @Override
    public Retrofit provideRetrofit() {
      return NetworkModule_ProvideRetrofitFactory.provideRetrofit(networkModule, NetworkModule_ProvideGsonFactory.provideGson(networkModule), NetworkModule_ProvideOkHttpClientFactory.provideOkHttpClient(networkModule), HttpUrlModule_ProvideRestApiUrlFactory.provideRestApiUrl());
    }

    @Override
    public OkHttpClient provideOkHttpClient() {
      return NetworkModule_ProvideOkHttpClientFactory.provideOkHttpClient(networkModule);
    }
  }
}
